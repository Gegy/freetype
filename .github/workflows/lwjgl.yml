# IMPORTANT: after HEAD is updated, the "LWJGL" tag must be recreated!
name: LWJGL Build

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  S3_PARAMS: --cache-control "public,must-revalidate,proxy-revalidate,max-age=0"
  FREETYPE_PARAMS: --wrap-mode=default --force-fallback-for=harfbuzz,libpng,zlib -Dbrotli=disabled -Dbzip2=disabled -Dharfbuzz=enabled -Dpng=enabled -Dzlib=system -Dtests=disabled -Dbuildtype=release -Dfreetype2:zlib=disabled -Dfreetype2:png=disabled -Dharfbuzz:experimental_api=true -Db_lto=true -Db_ndebug=true

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: centos:7
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64]
        include:
          - ARCH: x64
    defaults:
      run:
        shell: bash
    steps:
      - name: Upgrade git
        run: |
          yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum -y install git
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - name: Configure yum
        run: |
          yum -y install epel-release
          yum -y update
      - name: Install build dependencies
        run: |
          yum -y install centos-release-scl
          yum -y install devtoolset-11-gcc-c++
          yum -y install python3 awscli libpng-dev
      - name: Install HarfBuzz dependencies
        run: |
          yum -y install ninja-build
          pip3 install meson
      - name: Configure build
        run: |
          source scl_source enable devtoolset-11 || true
          meson setup build $FREETYPE_PARAMS
      - name: Build
        run: |
          source scl_source enable devtoolset-11 || true
          meson compile --verbose -C build
          strip build/libfreetype.so
      - name: Upload artifact
        run: aws s3 cp build/libfreetype.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
      - name: Upload git revision
        run: |
          git config --global --add safe.directory $PWD
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libfreetype.so.git
          aws s3 cp libfreetype.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS

  linux-cross:
    name: Linux Cross
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.CONTAINER}}
    strategy:
      fail-fast: false
      matrix:
        ARCH: [arm32, arm64, ppc64le, riscv64]
        include:
          # -----
          - ARCH: arm32
            CROSS_ARCH: armhf
            CONTAINER: ubuntu:18.04
            TRIPLET: arm-linux-gnueabihf
          # -----
          - ARCH: arm64
            CROSS_ARCH: arm64
            CONTAINER: ubuntu:18.04
            TRIPLET: aarch64-linux-gnu
          # -----
          - ARCH: ppc64le
            CROSS_ARCH: ppc64el
            CONTAINER: ubuntu:18.04
            TRIPLET: powerpc64le-linux-gnu
          # -----
          - ARCH: riscv64
            CROSS_ARCH: riscv64
            CONTAINER: ubuntu:20.04
            TRIPLET: riscv64-linux-gnu
    env:
      LWJGL_ARCH: ${{matrix.ARCH}}
    defaults:
      run:
        shell: bash
    steps:
      - name: Update apt repositories
        run: |
          apt-get -y update
          apt-get -y install software-properties-common
          apt-get -y install --reinstall ca-certificates
          add-apt-repository -y ppa:git-core/ppa
        if: ${{ matrix.CONTAINER == 'ubuntu:18.04' }}
      - name: Upgrade git
        run: |
          apt-get -y update
          apt-get -y upgrade
          DEBIAN_FRONTEND=noninteractive apt-get -yq install awscli git ninja-build python3-pip
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - name: Install dependencies
        run: DEBIAN_FRONTEND=noninteractive apt-get -yq install cmake gcc-${{matrix.TRIPLET}} g++-${{matrix.TRIPLET}} libc6-dev-${{matrix.CROSS_ARCH}}-cross
      - name: Install meson
        run: pip3 install meson
      - name: Prepare cross-compilation for ${{matrix.CROSS_ARCH}}
        run: |
          sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
          grep "ubuntu.com/ubuntu" /etc/apt/sources.list | tee /etc/apt/sources.list.d/ports.list
          sed -i 's/amd64,i386/${{matrix.CROSS_ARCH}}/' /etc/apt/sources.list.d/ports.list
          sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
          dpkg --add-architecture ${{matrix.CROSS_ARCH}}
          apt-get update || true
      - name: Configure build
        run: meson setup build $FREETYPE_PARAMS --cross-file lwjgl_linux_${{matrix.ARCH}}.cross
      - name: Build
        run: |
          meson compile --verbose -C build
          ${{matrix.TRIPLET}}-strip build/libfreetype.so
      - name: Upload artifact
        run: aws s3 cp build/libfreetype.so s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS
      - name: Upload git revision
        run: |
          git config --global --add safe.directory $(pwd)
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libfreetype.so.git
          aws s3 cp libfreetype.so.git s3://lwjgl-build/nightly/linux/${{matrix.ARCH}}/ $S3_PARAMS

  freebsd-cross:
    name: FreeBSD Cross
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - name: Build
        uses: cross-platform-actions/action@v0.24.0
        with:
          operating_system: freebsd
          architecture: x86-64
          version: '13.2'
          memory: 4G
          shell: bash
          environment_variables: FREETYPE_PARAMS
          run: |
            sudo pkg install -y git python3 png ninja
            python3 -m ensurepip --upgrade
            export PATH=$PATH:/home/runner/.local/bin
            pip3 install meson
            meson setup build $FREETYPE_PARAMS
            meson compile --verbose -C build
            strip build/libfreetype.so
      - name: Upload artifact # Symlinks are not copied out of the VM. These SOs are versioned.
        #run: aws s3 cp `find -E . -maxdepth 2 -regex './build/libfreetype.so(\.[0-9]+)*'` s3://lwjgl-build/nightly/freebsd/x64/libfreetype.so $S3_PARAMS
        run: aws s3 cp build/libfreetype.so s3://lwjgl-build/nightly/freebsd/x64/ $S3_PARAMS
      - name: Upload git revision
        run: |
          git config --global --add safe.directory $PWD
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libfreetype.so.git
          aws s3 cp libfreetype.so.git s3://lwjgl-build/nightly/freebsd/x64/ $S3_PARAMS

  macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x64, arm64]
        include:
          - ARCH: x64
            MACOS: 10.11
            MESON_PARAMS: --cross-file lwjgl_macos_x64.cross
          - ARCH: arm64
            MACOS: 11.0
            MESON_PARAMS: --cross-file lwjgl_macos_arm64.cross
            env:
              MACOSX_DEPLOYMENT_TARGET: 11.0
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - name: Install dependencies
        run: brew install meson
      - name: Configure build
        run: MACOSX_DEPLOYMENT_TARGET=${{matrix.MACOS}} meson setup build $FREETYPE_PARAMS -Dharfbuzz:coretext=enabled ${{matrix.MESON_PARAMS}}
      - name: Build
        run: |
          MACOSX_DEPLOYMENT_TARGET=${{matrix.MACOS}} meson compile --verbose -C build
          strip -u -r build/libfreetype.dylib
      - name: Upload artifact
        run: aws s3 cp build/libfreetype.dylib s3://lwjgl-build/nightly/macosx/${{matrix.ARCH}}/ $S3_PARAMS
      - name: Upload git revision
        run: |
          git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libfreetype.dylib.git
          aws s3 cp libfreetype.dylib.git s3://lwjgl-build/nightly/macosx/${{matrix.ARCH}}/ $S3_PARAMS

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x86, x64, arm64]
        include:
          - ARCH: x86
            MSVC_ARCH: amd64_x86
            PLATFORM: Win32
            MESON_PARAMS:
          - ARCH: x64
            MSVC_ARCH: amd64
            PLATFORM: x64
            MESON_PARAMS:
          - ARCH: arm64
            MSVC_ARCH: amd64_arm64
            PLATFORM: ARM64
            MESON_PARAMS: --cross-file lwjgl_windows_arm64.cross
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.MSVC_ARCH}}
      # Strawberry Perl is installed by default on the Windows runner, adding a bunch of horrible stuff to PATH.
      # Including a freetype build... which Meson picks up. Just nuke it here and everything will be fine.
      # See https://github.com/actions/runner-images/issues/5459 for details. We haven't encountered this before
      # because Meson uses .a for static MSVC libraries, instead of the usual .lib suffix.
      - name: Install dependencies
        run: |
          pip3 install meson
          rmdir C:\Strawberry /s /q
      - name: Configure build
        run: meson setup build %FREETYPE_PARAMS% -Db_vscrt=mt -Dharfbuzz:gdi=enabled -Dharfbuzz:directwrite=enabled ${{matrix.MESON_PARAMS}}
      - name: Build
        run: meson compile --verbose -C build
      - name: Upload artifact
        run: aws s3 cp build\freetype-6.dll s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/freetype.dll %S3_PARAMS%
      - name: Upload git revision
        run: |
          git log --first-parent --pretty=format:%%H HEAD~2..HEAD~1 > freetype.dll.git
          aws s3 cp freetype.dll.git s3://lwjgl-build/nightly/windows/${{matrix.ARCH}}/ %S3_PARAMS%
